<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://saguileran.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://saguileran.github.io/" rel="alternate" type="text/html"/><updated>2025-03-27T02:02:11+00:00</updated><id>https://saguileran.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">Free Software Development</title><link href="https://saguileran.github.io/blog/2025/open-software/" rel="alternate" type="text/html" title="Free Software Development"/><published>2025-03-15T21:01:00+00:00</published><updated>2025-03-15T21:01:00+00:00</updated><id>https://saguileran.github.io/blog/2025/open-software</id><content type="html" xml:base="https://saguileran.github.io/blog/2025/open-software/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>This post is created for the Free Software Development course taught by <a href="https://www.ime.usp.br/paulormm/">Professor Paulo R. M. Meirelles</a> at the <a href="https://www.ime.usp.br/">Institute of Mathematics and Statistics (IME)</a> at the <a href="https://www5.usp.br/">University of São Paulo (USP)</a>. The course is designed and maintained by the research group <a href="https://flusp.ime.usp.br/">FLUSP</a>. You can find all tutorials and more detailed information on its official webpage. More information about the course (content, references, etc.) can be found on the official website Janus for the courses, <a href="https://uspdigital.usp.br/janus/componente/disciplinasOferecidasInicial.jsf?action=3&amp;sgldis=MAC5856">MAC5856 - Desenvolvimento de Software Livre</a>.</p> <p>The objective of the course is to introduce students to free and open source software. In Portuguese, both terms mean the same. The course covers basic concepts, appropriate languages, ethical and technical aspects, etc., with the goal of promoting and constructing open and collaborative software.</p> <blockquote> <p><strong>NOTE</strong></p> <p>The device used for the course is a Lenovo laptop with Ubuntu 24.04.2 LTS.</p> </blockquote> <h2 id="tutorial-1-setting-up-a-test-environment-for-linux-kernel">Tutorial 1: Setting up a test environment for Linux Kernel</h2> <p>The first tutorial of the course provides an introduction to <a href="https://github.com/QEMU">QEMU</a> and <a href="https://github.com/libvirt">libvirt</a>, powerful tools designed to deploy virtual machines (VMs) quickly and efficiently, eliminating the traditional complexities and time-consuming efforts typically associated with VM setup. Both QEMU and libvirt are libraries used for virtualization and resource emulation, enabling users to create and manage virtualized environments with ease.</p> <p>A detailed guide can be found at: <a href="https://flusp.ime.usp.br/kernel/qemu-libvirt-setup/">Setting up a test environment for Linux Kernel Dev using QEMU and libvirt</a>.</p> <h3 id="summary">Summary</h3> <p>The tutorial is divided into the following sections:</p> <ol> <li> <p>Preparing testing environment directory and “all-in-one” script</p> <ul> <li>Create necessary folders and files.</li> <li>Give the required permissions for files and folders.</li> </ul> </li> <li> <p>Set up and configure a VM running a guest OS</p> <ul> <li>Create an <code class="language-plaintext highlighter-rouge">activate.sh</code> file to deploy VMs manager. To enable it, execute the comand <code class="language-plaintext highlighter-rouge">/path_to/activate.sh</code>, this will print some green text and a pink prompt preamble to .</li> <li>Check image OS properties and partition size, then resize the disk image to 5Gb to give space for more linux modules.</li> <li>Extract kernel and initrd images from OS image to create the VM</li> </ul> </li> <li>Configure SSH access from the host to the VM</li> <li>Set up host &lt;-&gt; VM file sharing (optional)</li> </ol> <p>To start a created machine use <code class="language-plaintext highlighter-rouge">sudo virsh start --console arm64</code>.</p> <h3 id="troubleshooting">Troubleshooting</h3> <h4 id="ssh-configuration">SSH Configuration</h4> <p>At point 3, if the <code class="language-plaintext highlighter-rouge">/etc/ssh/</code> folder is missing, it indicates that SSH is not installed on the system. To resolve this issue, follow these steps:</p> <ol> <li> <p>Update and upgrade the system packages:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update <span class="o">&amp;&amp;</span> <span class="nb">sudo </span>apt upgrade
</code></pre></div> </div> </li> <li> <p>Install the OpenSSH server package to enable SSH functionality:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>openssh-server
</code></pre></div> </div> </li> </ol> <p>This will download and configure the necessary SSH dependencies, allowing you to establish an SSH connection.</p> <h4 id="shared-memory">Shared Memory</h4> <p>Blog to solve the shared memory issue: https://discourse.nixos.org/t/virt-manager-cannot-find-virtiofsd/26752/9</p> <p><code class="language-plaintext highlighter-rouge">EDITOR=nano; virsh edit arm64</code></p> <h3 id="parctical-excersie-ubuntu-jammy-kernel">Parctical excersie: Ubuntu Jammy kernel</h3> <p>As a practical exercise, let’s create a VM using an Ubuntu image. Since the previous image is lightweight, let’s test with a more robust image.</p> <ol> <li> <p>Add environment constants and functions to the “all-in-one” script:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>++activate.sh

<span class="nb">export </span><span class="nv">BOOT_DIR_UBUNTU</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64"</span> <span class="c"># path to boot artifacts</span>

<span class="c"># ---------- ubuntu image -----------</span>
<span class="k">function </span>launch_ubuntu_vm_qemu<span class="o">()</span> <span class="o">{</span>
    qemu-system-aarch64 <span class="se">\</span>
        <span class="nt">-M</span> virt,gic-version<span class="o">=</span>3 <span class="se">\</span>
        <span class="nt">-m</span> 7G <span class="nt">-cpu</span> cortex-a57 <span class="se">\</span>
        <span class="nt">-smp</span> 2 <span class="se">\</span>
        <span class="nt">-netdev</span> user,id<span class="o">=</span>net0 <span class="nt">-device</span> virtio-net-device,netdev<span class="o">=</span>net0 <span class="se">\</span>
        <span class="nt">-initrd</span> <span class="s2">"</span><span class="k">${</span><span class="nv">BOOT_DIR_UBUNTU</span><span class="k">}</span><span class="s2">/initrd.img-5.15.0-134-generic-lpae"</span> <span class="se">\</span>
        <span class="nt">-kernel</span> <span class="s2">"</span><span class="k">${</span><span class="nv">BOOT_DIR_UBUNTU</span><span class="k">}</span><span class="s2">/vmlinuz-5.15.0-134-generic-lpae"</span> <span class="se">\</span>
        <span class="nt">-append</span> <span class="s2">"loglevel=8 root=/dev/vda2 rootwait"</span> <span class="se">\</span>
        <span class="nt">-device</span> virtio-blk-pci,drive<span class="o">=</span>hd <span class="se">\</span>
        <span class="nt">-drive</span> <span class="k">if</span><span class="o">=</span>none,file<span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64.qcow2"</span>,format<span class="o">=</span>qcow2,id<span class="o">=</span>hd <span class="se">\</span>
        <span class="nt">-nographic</span>
<span class="o">}</span>

<span class="k">function </span>create_ubuntu_vm_virsh<span class="o">()</span> <span class="o">{</span>
    <span class="nb">sudo </span>virt-install <span class="se">\</span>
      <span class="nt">--name</span> <span class="s2">"ubuntu-jammy"</span> <span class="se">\</span>
      <span class="nt">--memory</span> 2048 <span class="se">\</span>
      <span class="nt">--arch</span> aarch64 <span class="nt">--machine</span> virt <span class="se">\</span>
      <span class="nt">--osinfo</span> <span class="nv">detect</span><span class="o">=</span>on,require<span class="o">=</span>off <span class="se">\</span>
      <span class="nt">--import</span> <span class="se">\</span>
      <span class="nt">--features</span> <span class="nv">acpi</span><span class="o">=</span>off <span class="se">\</span>
      <span class="nt">--disk</span> <span class="nv">path</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64.qcow2"</span> <span class="se">\</span>
      <span class="nt">--boot</span> <span class="nv">kernel</span><span class="o">=</span><span class="k">${</span><span class="nv">BOOT_DIR_UBUNTU</span><span class="k">}</span>/vmlinuz-5.15.0-134-generic-lpae,initrd<span class="o">=</span><span class="k">${</span><span class="nv">BOOT_DIR_UBUNTU</span><span class="k">}</span>/initrd.img-5.15.0-134-generic-lpae,kernel_args<span class="o">=</span><span class="s2">"loglevel=8 root=/dev/vda2 rootwait"</span> <span class="se">\</span>
      <span class="nt">--network</span> bridge:virbr0 <span class="se">\</span>
      <span class="nt">--graphics</span> none
<span class="o">}</span>

<span class="nb">export</span> <span class="nt">-f</span> launch_ubuntu_vm_qemu
<span class="nb">export</span> <span class="nt">-f</span> create_ubuntu_vm_virsh
</code></pre></div> </div> </li> <li> <p>Set up and configure a VM</p> <p>2.1. Download image</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="nt">--directory-prefix</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">"</span> https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-armhf.img
<span class="nb">mv</span> <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/jammy-server-cloudimg-armhf.img"</span> <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64.qcow2"</span> <span class="c"># rename file for legibility</span>
</code></pre></div> </div> <p>The kernel downloaded is Debian-12-nocloud-arm64-daily-20250217-2026.qcow2, an image for QEMU without cloud settings and arm64 architecture, <a href="http://cdimage.debian.org/cdimage/cloud/bookworm/daily/20250217-2026/debian-12-nocloud-arm64-daily-20250217-2026.qcow2">link to download</a>. As practice excersie let’s download an Ubuntu arm image, <a href="https://cloud-images.ubuntu.com/jammy/current/">Ubuntu 22.04 LTS (Jammy Jellyfish)</a>, select any QCow2 image, note that this image contains a cloud setup.</p> <p>2.2. Resize disk image</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">du</span> <span class="nt">-h</span> <span class="s2">"ubuntu-jammy-arm64.qcow2"</span>
</code></pre></div> </div> <p>Output:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1,2G	base-jammy-server-cloudimg-armhf.img
</code></pre></div> </div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>qemu-img info <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64.qcow2"</span>
</code></pre></div> </div> <p>Output:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>image: base-jammy-server-cloudimg-armhf.img
file format: qcow2
virtual size: 3.5 GiB <span class="o">(</span>3758096384 bytes<span class="o">)</span>
disk size: 1.15 GiB
cluster_size: 65536
Format specific information:
    compat: 0.10
    compression <span class="nb">type</span>: zlib
    refcount bits: 16
Child node <span class="s1">'/file'</span>:
    filename: base-jammy-server-cloudimg-armhf.img
    protocol <span class="nb">type</span>: file
    file length: 1.15 GiB <span class="o">(</span>1233318400 bytes<span class="o">)</span>
    disk size: 1.15 GiB
</code></pre></div> </div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>virt-filesystems <span class="nt">--long</span> <span class="nt">--human-readable</span> <span class="nt">--all</span> <span class="nt">--add</span> <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64.qcow2"</span>
</code></pre></div> </div> <p>Output:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Name        Type        VFS   Label            MBR  Size  Parent
/dev/sda1   filesystem  ext4  cloudimg-rootfs  -    3,2G  -
/dev/sda15  filesystem  vfat  UEFI             -    97M   -
/dev/sda1   partition   -     -                -    3,4G  /dev/sda
/dev/sda15  partition   -     -                -    99M   /dev/sda
/dev/sda    device      -     -                -    3,5G  -
</code></pre></div> </div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>qemu-img create <span class="nt">-f</span> qcow2 <span class="nt">-o</span> <span class="nv">preallocation</span><span class="o">=</span>metadata <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/ubuntu-jammy-arm64.qcow2"</span> 7G <span class="c"># creates new QCOW2 image with 5GB</span>
virt-resize <span class="nt">--expand</span> /dev/sda1 <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/base-jammy-server-cloudimg-armhf.img"</span> <span class="s2">"</span><span class="k">${</span><span class="nv">VM_DIR</span><span class="k">}</span><span class="s2">/arm64_img.qcow2"</span> <span class="c"># makes a copy of the image expanding the `rootfs`</span>
</code></pre></div> </div> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Name       Type        VFS   Label            MBR  Size  Parent
/dev/sda1  filesystem  vfat  UEFI             -    97M   -
/dev/sda2  filesystem  ext4  cloudimg-rootfs  -    6,6G  -
/dev/sda1  partition   -     -                -    99M   /dev/sda
/dev/sda2  partition   -     -                -    6,9G  /dev/sda
/dev/sda   device      -     -                -    7,0G  -
</code></pre></div> </div> </li> </ol> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>initrd.img-5.15.0-134-generic-lpae
vmlinuz-5.15.0-134-generic-lpae
</code></pre></div></div> <blockquote> <p><strong>Useful Commands</strong></p> <ul> <li><code class="language-plaintext highlighter-rouge">lsmod</code> - Show the status of modules in the Linux Kernel, more info <a href="https://manpages.ubuntu.com/manpages/trusty/man8/lsmod.8.html">here</a>.</li> </ul> </blockquote> <div class="row mt-3" style="width:70%; margin: 0 auto 0 auto;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/flusp/9-480.webp 480w,/assets/img/flusp/9-800.webp 800w,/assets/img/flusp/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/flusp/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all. </div> <h2 id="tutorial-2-building-and-booting-a-custom-linux-kernel-for-arm-using-kw">Tutorial 2: Building and booting a custom Linux kernel for ARM using kw</h2> <p>asd</p> <p>A detailed guide can be found at: <a href="https://flusp.ime.usp.br/kernel/build-linux-for-arm-kw/">Building and booting a custom Linux kernel for ARM using kw</a></p> <h3 id="parts">Parts</h3> <p>find ~/ -type f -name “postgis-2.0.0”</p> <h3 id="troubleshooting-1">Troubleshooting</h3> <h3 id="results">Results</h3> <h2 id="tutorial-3-introduction-to-linux-kernel-build-configuration-and-modules">Tutorial 3: Introduction to Linux kernel build configuration and modules</h2> <h3 id="parts-1">Parts</h3> <p>find ~/ -type f -name “postgis-2.0.0”</p> <h3 id="troubleshooting-2">Troubleshooting</h3> <h3 id="results-1">Results</h3> <h2 id="tutorial-4">Tutorial 4</h2> <h3 id="parts-2">Parts</h3> <h3 id="troubleshooting-3">Troubleshooting</h3> <h3 id="results-2">Results</h3> <h2 id="tutorial-5">Tutorial 5</h2> <h3 id="parts-3">Parts</h3> <h3 id="troubleshooting-4">Troubleshooting</h3> <h3 id="results-3">Results</h3> <h2 id="tutorial-6">Tutorial 6</h2> <h3 id="parts-4">Parts</h3> <h3 id="troubleshooting-5">Troubleshooting</h3> <h3 id="results-4">Results</h3> <h2 id="tutorial-7">Tutorial 7</h2> <h3 id="parts-5">Parts</h3> <h3 id="troubleshooting-6">Troubleshooting</h3> <h3 id="results-5">Results</h3> <h2 id="tutorial-8">Tutorial 8</h2> <h3 id="parts-6">Parts</h3> <h3 id="troubleshooting-7">Troubleshooting</h3> <h3 id="results-6">Results</h3>]]></content><author><name></name></author><category term="free software"/><category term="usp"/><category term="mac-courses"/><summary type="html"><![CDATA[Logbook and notes for the free software development course at USP, 2025-1]]></summary></entry><entry><title type="html">Birds, birds, and more birds</title><link href="https://saguileran.github.io/blog/2024/birds_in_everywhere/" rel="alternate" type="text/html" title="Birds, birds, and more birds"/><published>2024-06-24T21:01:00+00:00</published><updated>2024-06-24T21:01:00+00:00</updated><id>https://saguileran.github.io/blog/2024/birds_in_everywhere</id><content type="html" xml:base="https://saguileran.github.io/blog/2024/birds_in_everywhere/"><![CDATA[<p>This is an example post with image galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all. </div> <p>Images can be made zoomable. Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/11-480.webp 480w,/assets/img/11-800.webp 800w,/assets/img/11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/11.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="birds"/><category term="art"/><category term="images"/><summary type="html"><![CDATA[Birds and graffiti]]></summary></entry><entry><title type="html">Websites using Github pages</title><link href="https://saguileran.github.io/blog/2024/github-pages/" rel="alternate" type="text/html" title="Websites using Github pages"/><published>2024-06-24T21:01:00+00:00</published><updated>2024-06-24T21:01:00+00:00</updated><id>https://saguileran.github.io/blog/2024/github-pages</id><content type="html" xml:base="https://saguileran.github.io/blog/2024/github-pages/"><![CDATA[]]></content><author><name></name></author><category term="learning"/><category term="github"/><category term="websites"/><summary type="html"><![CDATA[A basic tutorial to implement a personal, or for projects, website]]></summary></entry><entry><title type="html">Pensamientos</title><link href="https://saguileran.github.io/blog/2024/thoughts/" rel="alternate" type="text/html" title="Pensamientos"/><published>2024-06-24T21:01:00+00:00</published><updated>2024-06-24T21:01:00+00:00</updated><id>https://saguileran.github.io/blog/2024/thoughts</id><content type="html" xml:base="https://saguileran.github.io/blog/2024/thoughts/"><![CDATA[<h1 id="enloquecer">Enloquecer</h1> <p>Durante mucho tiempo sentí que ya no era y que había dejado de ser, me pregunté que era y que sentía, pero no encontraba ni si quiera mi que hacer. Ahora entiendo que tu partida creo un en mi un vació, que difícil fue de creer. Sin embargo, descubrí que había dejado de ser yo, no por pretender sino por querer, pues tu alma permeo mi ser y desde entonces no quería nada más que aprender… Aprender de ti: quien eras y que querías, de lo que haz de merecer, que música te gustaba, que leías, o de que te gustaba al amanecer, aaaa!, aquellos tiempos… Con todo y al mismo tiempo sin nada de perder.</p> <p>Mucho tiempo después, ahora, creo que no fui capaz de aquilatar tu</p> <p>que es la vida? sucesos, anecdotas, experiencias, jajajaj todo, sin dudarlo</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="birds"/><category term="images"/><summary type="html"><![CDATA[Pensamientos...]]></summary></entry><entry><title type="html">Testing poems</title><link href="https://saguileran.github.io/blog/2023/poem-for-mj/" rel="alternate" type="text/html" title="Testing poems"/><published>2023-06-24T21:01:00+00:00</published><updated>2023-06-24T21:01:00+00:00</updated><id>https://saguileran.github.io/blog/2023/poem-for-mj</id><content type="html" xml:base="https://saguileran.github.io/blog/2023/poem-for-mj/"><![CDATA[]]></content><author><name></name></author><category term="sample-posts"/><category term="writting"/><summary type="html"><![CDATA[In process]]></summary></entry><entry><title type="html">El Carmen, Norte de Santander</title><link href="https://saguileran.github.io/blog/2023/el-carmen-NS/" rel="alternate" type="text/html" title="El Carmen, Norte de Santander"/><published>2023-06-12T21:01:00+00:00</published><updated>2023-06-12T21:01:00+00:00</updated><id>https://saguileran.github.io/blog/2023/el-carmen-NS</id><content type="html" xml:base="https://saguileran.github.io/blog/2023/el-carmen-NS/"><![CDATA[]]></content><author><name></name></author><category term="travel"/><category term="images"/><summary type="html"><![CDATA[A wonderful place with kindly people and great festivals]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://saguileran.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://saguileran.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://saguileran.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>